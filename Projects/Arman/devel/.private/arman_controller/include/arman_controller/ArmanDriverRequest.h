// Generated by gencpp from file arman_controller/ArmanDriverRequest.msg
// DO NOT EDIT!


#ifndef ARMAN_CONTROLLER_MESSAGE_ARMANDRIVERREQUEST_H
#define ARMAN_CONTROLLER_MESSAGE_ARMANDRIVERREQUEST_H

#include <ros/service_traits.h>


#include <arman_controller/ArmanDriverRequestRequest.h>
#include <arman_controller/ArmanDriverRequestResponse.h>


namespace arman_controller
{

struct ArmanDriverRequest
{

typedef ArmanDriverRequestRequest Request;
typedef ArmanDriverRequestResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ArmanDriverRequest
} // namespace arman_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::arman_controller::ArmanDriverRequest > {
  static const char* value()
  {
    return "32056f59691abbe99bbd41d6989295c4";
  }

  static const char* value(const ::arman_controller::ArmanDriverRequest&) { return value(); }
};

template<>
struct DataType< ::arman_controller::ArmanDriverRequest > {
  static const char* value()
  {
    return "arman_controller/ArmanDriverRequest";
  }

  static const char* value(const ::arman_controller::ArmanDriverRequest&) { return value(); }
};


// service_traits::MD5Sum< ::arman_controller::ArmanDriverRequestRequest> should match
// service_traits::MD5Sum< ::arman_controller::ArmanDriverRequest >
template<>
struct MD5Sum< ::arman_controller::ArmanDriverRequestRequest>
{
  static const char* value()
  {
    return MD5Sum< ::arman_controller::ArmanDriverRequest >::value();
  }
  static const char* value(const ::arman_controller::ArmanDriverRequestRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::arman_controller::ArmanDriverRequestRequest> should match
// service_traits::DataType< ::arman_controller::ArmanDriverRequest >
template<>
struct DataType< ::arman_controller::ArmanDriverRequestRequest>
{
  static const char* value()
  {
    return DataType< ::arman_controller::ArmanDriverRequest >::value();
  }
  static const char* value(const ::arman_controller::ArmanDriverRequestRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::arman_controller::ArmanDriverRequestResponse> should match
// service_traits::MD5Sum< ::arman_controller::ArmanDriverRequest >
template<>
struct MD5Sum< ::arman_controller::ArmanDriverRequestResponse>
{
  static const char* value()
  {
    return MD5Sum< ::arman_controller::ArmanDriverRequest >::value();
  }
  static const char* value(const ::arman_controller::ArmanDriverRequestResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::arman_controller::ArmanDriverRequestResponse> should match
// service_traits::DataType< ::arman_controller::ArmanDriverRequest >
template<>
struct DataType< ::arman_controller::ArmanDriverRequestResponse>
{
  static const char* value()
  {
    return DataType< ::arman_controller::ArmanDriverRequest >::value();
  }
  static const char* value(const ::arman_controller::ArmanDriverRequestResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ARMAN_CONTROLLER_MESSAGE_ARMANDRIVERREQUEST_H
